//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift.org open source project
//
// Copyright (c) 2025 Apple Inc. and the Swift project authors
// Licensed under Apache License v2.0 with Runtime Library Exception
//
// See https://swift.org/LICENSE.txt for license information
// See https://swift.org/CONTRIBUTORS.txt for the list of Swift project authors
//
//===----------------------------------------------------------------------===//


// WARNING: DO NOT EDIT THIS FILE DIRECTLY.
//          This is auto-generated by `update-iana-charset-names`.


extension IANACharset {
    /// IANA Charset `US-ASCII`.
    static let usASCII = IANACharset(
        preferredMIMEName: "US-ASCII",
        name: "US-ASCII",
        aliases: [
            "iso-ir-6",
            "ANSI_X3.4-1968",
            "ANSI_X3.4-1986",
            "ISO_646.irv:1991",
            "ISO646-US",
            "US-ASCII",
            "us",
            "IBM367",
            "cp367",
            "csASCII",
        ]
    )

    /// IANA Charset `ISO-8859-1`.
    static let iso8859_1 = IANACharset(
        preferredMIMEName: "ISO-8859-1",
        name: "ISO_8859-1:1987",
        aliases: [
            "iso-ir-100",
            "ISO_8859-1",
            "ISO-8859-1",
            "latin1",
            "l1",
            "IBM819",
            "CP819",
            "csISOLatin1",
        ]
    )

    /// IANA Charset `ISO-8859-2`.
    static let iso8859_2 = IANACharset(
        preferredMIMEName: "ISO-8859-2",
        name: "ISO_8859-2:1987",
        aliases: [
            "iso-ir-101",
            "ISO_8859-2",
            "ISO-8859-2",
            "latin2",
            "l2",
            "csISOLatin2",
        ]
    )

    /// IANA Charset `Shift_JIS`.
    static let shiftJIS = IANACharset(
        preferredMIMEName: "Shift_JIS",
        name: "Shift_JIS",
        aliases: [
            "MS_Kanji",
            "csShiftJIS",
        ]
    )

    /// IANA Charset `EUC-JP`.
    static let eucJP = IANACharset(
        preferredMIMEName: "EUC-JP",
        name: "Extended_UNIX_Code_Packed_Format_for_Japanese",
        aliases: [
            "csEUCPkdFmtJapanese",
            "EUC-JP",
        ]
    )

    /// IANA Charset `ISO-2022-JP`.
    static let iso2022JP = IANACharset(
        preferredMIMEName: "ISO-2022-JP",
        name: "ISO-2022-JP",
        aliases: [
            "csISO2022JP",
        ]
    )

    /// IANA Charset `UTF-8`.
    static let utf8 = IANACharset(
        preferredMIMEName: nil,
        name: "UTF-8",
        aliases: [
            "csUTF8",
        ]
    )

    /// IANA Charset `UTF-16BE`.
    static let utf16BE = IANACharset(
        preferredMIMEName: nil,
        name: "UTF-16BE",
        aliases: [
            "csUTF16BE",
        ]
    )

    /// IANA Charset `UTF-16LE`.
    static let utf16LE = IANACharset(
        preferredMIMEName: nil,
        name: "UTF-16LE",
        aliases: [
            "csUTF16LE",
        ]
    )

    /// IANA Charset `UTF-16`.
    static let utf16 = IANACharset(
        preferredMIMEName: nil,
        name: "UTF-16",
        aliases: [
            "csUTF16",
        ]
    )

    /// IANA Charset `UTF-32`.
    static let utf32 = IANACharset(
        preferredMIMEName: nil,
        name: "UTF-32",
        aliases: [
            "csUTF32",
        ]
    )

    /// IANA Charset `UTF-32BE`.
    static let utf32BE = IANACharset(
        preferredMIMEName: nil,
        name: "UTF-32BE",
        aliases: [
            "csUTF32BE",
        ]
    )

    /// IANA Charset `UTF-32LE`.
    static let utf32LE = IANACharset(
        preferredMIMEName: nil,
        name: "UTF-32LE",
        aliases: [
            "csUTF32LE",
        ]
    )

    /// IANA Charset `macintosh`.
    static let macintosh = IANACharset(
        preferredMIMEName: nil,
        name: "macintosh",
        aliases: [
            "mac",
            "csMacintosh",
        ]
    )

    /// IANA Charset `windows-1250`.
    static let windows1250 = IANACharset(
        preferredMIMEName: nil,
        name: "windows-1250",
        aliases: [
            "cswindows1250",
        ]
    )

    /// IANA Charset `windows-1251`.
    static let windows1251 = IANACharset(
        preferredMIMEName: nil,
        name: "windows-1251",
        aliases: [
            "cswindows1251",
        ]
    )

    /// IANA Charset `windows-1252`.
    static let windows1252 = IANACharset(
        preferredMIMEName: nil,
        name: "windows-1252",
        aliases: [
            "cswindows1252",
        ]
    )

    /// IANA Charset `windows-1253`.
    static let windows1253 = IANACharset(
        preferredMIMEName: nil,
        name: "windows-1253",
        aliases: [
            "cswindows1253",
        ]
    )

    /// IANA Charset `windows-1254`.
    static let windows1254 = IANACharset(
        preferredMIMEName: nil,
        name: "windows-1254",
        aliases: [
            "cswindows1254",
        ]
    )
}
